# CUSTOM COMMANDS
export EDITOR=vim
# GVim Alias
alias gv='gvim'
alias upd='sudo apt-get update'
alias inst='sudo apt-get install'
alias repo='sudo add-apt-repository'
alias pac='sudo pacman -S'
alias rem='sudo pacman -R'

alias proc='ps -e | grep'
alias lanping='ping -c 3 webmail.iitk.ac.in'
alias wanping='ping -c 3 www.google.com'
alias mywifi rtl8723be

# Mounting aliases
alias DataDr='sudo mount /dev/sda6 /mnt'
alias UData='sudo umount /dev/sda6'

# PIP aliases to fix my 'sudo' troubles
alias pip='sudo pip'
alias pip2='sudo pip2'

# Shell plugin to correct commands
alias fuck='$(thefuck $(fc -ln -1))'
alias damn='$(thefuck $(fc -ln -1))'

# Adding .myscripts folder to path
export PATH=$HOME/.myscripts:$PATH

# Adding path to zsh-syntax-highlighting script
source ~/.myscripts/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}

key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"     ]]  && bindkey  "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]]  && bindkey  "${key[End]}"      end-of-line
[[ -n "${key[Insert]}"   ]]  && bindkey  "${key[Insert]}"   overwrite-mode
[[ -n "${key[Delete]}"   ]]  && bindkey  "${key[Delete]}"   delete-char
[[ -n "${key[Up]}"       ]]  && bindkey  "${key[Up]}"       up-line-or-history
[[ -n "${key[Down]}"     ]]  && bindkey  "${key[Down]}"     down-line-or-history
[[ -n "${key[Left]}"     ]]  && bindkey  "${key[Left]}"     backward-char
[[ -n "${key[Right]}"    ]]  && bindkey  "${key[Right]}"    forward-char
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"   beginning-of-buffer-or-history
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}" end-of-buffer-or-history

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        printf '%s' "${terminfo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi

# PageUp and PageDown would only show history items starting as typed
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"    history-beginning-search-backward
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}"  history-beginning-search-forward


export COOKIE="Cookie: id=saksham0808; timestamp=1430940663; auth=D546C5E71058DF8BDEF97D94CD8831D1E4598109"
